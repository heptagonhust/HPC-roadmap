(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{208:function(t,a,s){"use strict";s.r(a);var n=s(6),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"高性能计算学习路线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高性能计算学习路线"}},[t._v("#")]),t._v(" 高性能计算学习路线")]),t._v(" "),s("h2",{attrs:{id:"入门指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#入门指南"}},[t._v("#")]),t._v(" 入门指南")]),t._v(" "),s("h3",{attrs:{id:"easy-一两星期就够了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#easy-一两星期就够了"}},[t._v("#")]),t._v(" Easy：一两星期就够了！")]),t._v(" "),s("ul",[s("li",[t._v("C/C++ 语言")]),t._v(" "),s("li",[t._v("多线程与锁（std::thread, pthread）")]),t._v(" "),s("li",[t._v("SIMD 指令的使用")]),t._v(" "),s("li",[t._v("OpenMP 的使用")])]),t._v(" "),s("p",[t._v("习题：使用多线程（可以使用 openmp，std::thread, pthread 中的任意一种）和 SIMD 优化以下程序")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum_array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dot_product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"hard-来点有意思的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hard-来点有意思的"}},[t._v("#")]),t._v(" Hard：来点有意思的")]),t._v(" "),s("ul",[s("li",[t._v("Intel VTune Profiler 和 Intel Advisor 的使用")]),t._v(" "),s("li",[t._v("火焰图")]),t._v(" "),s("li",[t._v("阿姆达尔定律")]),t._v(" "),s("li",[t._v("存储器层次结构，高速缓存")]),t._v(" "),s("li",[t._v("原子操作")]),t._v(" "),s("li",[t._v("MPI 编程")])]),t._v(" "),s("p",[t._v("习题：优化矩阵乘法")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matrix_mul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"lunatic-大的要来了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lunatic-大的要来了"}},[t._v("#")]),t._v(" Lunatic：大的要来了")]),t._v(" "),s("ul",[s("li",[t._v("异构编程（GPGPU，太湖之光，etc）")]),t._v(" "),s("li",[t._v("现代处理器体系结构")]),t._v(" "),s("li",[t._v("熟练使用 Linux")]),t._v(" "),s("li",[t._v("运维，装机")])]),t._v(" "),s("p",[s("s",[t._v("习题：完整参与一次比赛")])]),t._v(" "),s("h2",{attrs:{id:"高性能计算-高性能的算法-高性能的软件系统-高性能的硬件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高性能计算-高性能的算法-高性能的软件系统-高性能的硬件"}},[t._v("#")]),t._v(" 高性能计算 = 高性能的算法 + 高性能的软件系统 + 高性能的硬件")]),t._v(" "),s("p",[t._v("HPC是一个比较综合的方向，涉及算法、体系结构、编程语言、操作系统、计算机网络等，还涉及专业的学科知识譬如生物信息学等，这也正是它的趣味性所在。High level 地想一想，要以最高效的方式来对一个给定问题求解，我们必然需要有高效的算法设计（上层）、高效的编程模型和代码生成（中层）、以及高效的计算机体系结构来执行机器码（下层）。要实现极致的效率，三者必须协作。")]),t._v(" "),s("h3",{attrs:{id:"学习资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习资源"}},[t._v("#")]),t._v(" 学习资源")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://software.intel.com/content/www/us/en/develop/home.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Intel Developer Zone"),s("OutboundLink")],1),t._v(" 中有 vtune, advisor 等性能分析工具的使用指南，还有 intel 的各种高性能计算库的文档。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.nvidia.com/cuda/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CUDA docs"),s("OutboundLink")],1),t._v(" 中有 CUDA 的文档和入门教程。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://mpitutorial.com/tutorials/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MPI tutorial"),s("OutboundLink")],1),t._v(" MPI的入门资料")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://software.intel.com/sites/landingpage/IntrinsicsGuide/#cats=Arithmetic&expand=3904,3913,4011,4014,4602,4011&techs=MMX,SSE,SSE2,SSE3,SSSE3,SSE4_1,SSE4_2,AVX,AVX2,FMA,AVX_512,AMX,SVML,Other",target:"_blank",rel:"noopener noreferrer"}},[t._v("intel Intrinsics Guide"),s("OutboundLink")],1),t._v(" intel的SIMD文档")]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.brendangregg.com/linuxperf.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux perf"),s("OutboundLink")],1),t._v(" 介绍了对 Linux 进行性能分析与调优的各种工具")]),t._v(" "),s("li",[t._v("OpenMP 和 MPI ：《并行程序设计导论》")]),t._v(" "),s("li",[t._v("CUDA : 《CUDA 并行程序设计》 《GPU 编程指南》 第5、6、9章")]),t._v(" "),s("li",[t._v("运维 ： 《Linux命令行与shell脚本编程大全》 (“Linux Command Line and Shell Scripting Bible”)")]),t._v(" "),s("li",[t._v("编译、链接 ： 《程序员的自我修养:装载、链接与库》 《深入理解计算机系统》第7章")]),t._v(" "),s("li",[t._v("内存与 Cache："),s("a",{attrs:{href:"https://people.freebsd.org/~lstewart/articles/cpumemory.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("What Every Programmer Should Know About Memory(pdf)"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("利用"),s("strong",[t._v("提问")]),t._v("的方式来梳理下一些知识，大部分都是开放式问题， 启发你自己去查找资料、思考。")]),t._v(" "),s("h2",{attrs:{id:"基础篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础篇"}},[t._v("#")]),t._v(" 基础篇")]),t._v(" "),s("ul",[s("li",[t._v("什么是超算？")]),t._v(" "),s("li",[t._v("什么是并行计算？什么是并行分布式计算？为什么需要并行分布式计算？")]),t._v(" "),s("li",[t._v("什么是线程？什么是进程？")])]),t._v(" "),s("h3",{attrs:{id:"程序性能分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序性能分析"}},[t._v("#")]),t._v(" 程序性能分析")]),t._v(" "),s("ul",[s("li",[t._v("Intel vtune profiler 如何使用？")]),t._v(" "),s("li",[t._v("如何测试程序性能？什么是热点分析？")]),t._v(" "),s("li",[t._v("程序性能分析报告怎么看？")]),t._v(" "),s("li",[t._v("什么是火焰图？")]),t._v(" "),s("li",[t._v("什么是 ebpf？")]),t._v(" "),s("li",[t._v("有哪些常用的 profiler？")]),t._v(" "),s("li",[t._v("我应该优化程序哪一部分？")]),t._v(" "),s("li",[t._v("性能优化有哪些策略：\n"),s("ol",[s("li",[t._v("并行度优化")]),t._v(" "),s("li",[t._v("数据传输优化")]),t._v(" "),s("li",[t._v("存储器访问优化")]),t._v(" "),s("li",[t._v("向量化优化")]),t._v(" "),s("li",[t._v("负载均衡优化")]),t._v(" "),s("li",[t._v("多线程扩展性优化")])])])]),t._v(" "),s("h3",{attrs:{id:"学习openmp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习openmp"}},[t._v("#")]),t._v(" 学习OpenMP")]),t._v(" "),s("ul",[s("li",[t._v("什么是OpenMP？有什么作用？")]),t._v(" "),s("li",[t._v("如何使用OpenMP来加速我的代码？在Linux环境下如何配置？")]),t._v(" "),s("li",[t._v("我该在哪并行？如何选择并行区域？")]),t._v(" "),s("li",[t._v("什么是数据依赖？什么是数据冲突？如何解决？")]),t._v(" "),s("li",[t._v("什么是原子操作？为什么需要原子操作？")]),t._v(" "),s("li",[t._v("我该选择多少线程来运行呢？线程数量越多越好吗？")]),t._v(" "),s("li",[t._v("我的代码运行正确吗？如何检验优化后代码运行的正确性？")]),t._v(" "),s("li",[t._v("我的代码优化成功了吗？加速比如何计算？")]),t._v(" "),s("li",[t._v("OpenMP实战：多线程矩阵乘法，矩阵分块乘法。")])]),t._v(" "),s("h3",{attrs:{id:"学习mpi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习mpi"}},[t._v("#")]),t._v(" 学习MPI")]),t._v(" "),s("ul",[s("li",[t._v("什么是MPI？")]),t._v(" "),s("li",[t._v("MPI 有哪些实现（openmpi 、intel-mpi、 mpich2 、platform-mpi）")]),t._v(" "),s("li",[t._v("什么是主进程master，什么是从进程slave？")]),t._v(" "),s("li",[t._v("什么是进程间通信？为什么进程间需要通信？如何进行进程间通信？")]),t._v(" "),s("li",[t._v("如何发送数据和接收数据？都有哪些方法？每种方法之间又何不同？")]),t._v(" "),s("li",[t._v("什么是同步？为什么需要同步？")]),t._v(" "),s("li",[t._v("什么是死锁？如何避免死锁？我该如何编译和运行MPI程序？")]),t._v(" "),s("li",[t._v("为什么我在一个节点上运行这么多进程和我在多个节点上运行这么多进程时间不一样？")]),t._v(" "),s("li",[t._v("MPI实战：矩阵乘法，矩阵分块乘法。")])]),t._v(" "),s("h3",{attrs:{id:"学习使用高性能集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习使用高性能集群"}},[t._v("#")]),t._v(" 学习使用高性能集群")]),t._v(" "),s("ul",[s("li",[t._v("如何远程登录（SSH）？节点之间如何做到无密码访问？")]),t._v(" "),s("li",[t._v("集群是怎样运作的？什么是管理节点？什么是计算节点？")]),t._v(" "),s("li",[t._v("为什么所有节点都能看到同样的目录？什么是共享存储？")]),t._v(" "),s("li",[t._v("了解你的集群。集群拓扑结构是怎样的？配置是什么？使用的是什么网络？")]),t._v(" "),s("li",[t._v("Linux基本命令 ？如何上传和下载文件？")]),t._v(" "),s("li",[t._v("如何从源码编译？什么是软件依赖？什么是动态链接库？什么是动态链接？什么是静态链接？")]),t._v(" "),s("li",[t._v("什么是脚本？掌握Shell脚本的使用。")])]),t._v(" "),s("h2",{attrs:{id:"提高篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提高篇"}},[t._v("#")]),t._v(" 提高篇")]),t._v(" "),s("h3",{attrs:{id:"计算机体系结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算机体系结构"}},[t._v("#")]),t._v(" 计算机体系结构")]),t._v(" "),s("p",[t._v("推荐 "),s("a",{attrs:{href:"https://www.starduster.me/2020/11/05/modern-microprocessors-a-90-minute-guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("现代微处理器架构 90 分钟指南"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("CPU的频率、寄存器、缓存、内存的读写时延大概是一个什么比例？")]),t._v(" "),s("li",[t._v("内存，PCIE，显存的带宽大概有多大？")]),t._v(" "),s("li",[t._v("缓存的结构是什么？缓存里面有哪些设计指标？如何影响缓存的效果？")]),t._v(" "),s("li",[t._v("多核的CPU并行执行，缓存是如何保持一致的？")]),t._v(" "),s("li",[t._v("CPU的流水线是什么？")]),t._v(" "),s("li",[t._v("分支预测是怎么做的？")]),t._v(" "),s("li",[t._v("ILP(Instruction-level parallelism)是怎么做到的？")]),t._v(" "),s("li",[t._v("什么是 NUMA 节点？什么是 SMT？")]),t._v(" "),s("li",[t._v("CPU的向量指令集（SIMD）是干嘛的？如何写程序用上SIMD？")]),t._v(" "),s("li",[t._v("GPU和CPU的设计区别在哪？GPU适用于什么场合？")]),t._v(" "),s("li",[t._v("GPU的编程范式是什么？GPU程序怎么写？")]),t._v(" "),s("li",[t._v("GPU的摩尔定律终结没有？")])]),t._v(" "),s("h3",{attrs:{id:"操作系统、编译器、运行时系统、算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作系统、编译器、运行时系统、算法"}},[t._v("#")]),t._v(" 操作系统、编译器、运行时系统、算法")]),t._v(" "),s("p",[t._v("推荐 "),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/136300660",target:"_blank",rel:"noopener noreferrer"}},[t._v("高速缓存与内存一致性专栏"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("虚拟内存、TLB都是啥？为什么使用虚拟内存？")]),t._v(" "),s("li",[t._v("进程的内存分布是啥样的？")]),t._v(" "),s("li",[t._v("OS眼中的线程、进程是如何被映射到多个CPU核心上执行的？线程之间是如何调度的？")]),t._v(" "),s("li",[t._v("最主要的一些编译优化都是啥？尤其是循环优化。")]),t._v(" "),s("li",[t._v("如何做性能分析？都有些啥工具？")]),t._v(" "),s("li",[t._v("如何用各种hardware performance counter？")]),t._v(" "),s("li",[t._v("pthread怎么用？它是怎么实现的？")]),t._v(" "),s("li",[t._v("OpenMP怎么用？它是怎么实现的？和pthread的区别与联系？")]),t._v(" "),s("li",[t._v("OpenMP里面的各种细节，譬如如何同步、如何共享数据等")]),t._v(" "),s("li",[t._v("MPI怎么用？它是怎么实现的？和OpenMP分别代表了什么模型？")]),t._v(" "),s("li",[t._v("OpenMP里的各种细节，各种collect，如何同步之类的")]),t._v(" "),s("li",[t._v("SIMD、SPMD、SIMT之间的区别是什么？")]),t._v(" "),s("li",[t._v("线程之间如何同步？")]),t._v(" "),s("li",[t._v("并行编程和串行编程有啥区别？")]),t._v(" "),s("li",[t._v("并行编程都有哪些模型？")]),t._v(" "),s("li",[t._v("如何把一个算法并行化？这个过程中都有哪些讲究？")]),t._v(" "),s("li",[t._v("如何把一个算法在GPU上高性能地实现？")]),t._v(" "),s("li",[t._v("如何实现lock-free数据结构和算法？")]),t._v(" "),s("li",[t._v("如何设计cache-oblivious algorithms？")])]),t._v(" "),s("h2",{attrs:{id:"拓展阅读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拓展阅读"}},[t._v("#")]),t._v(" 拓展阅读")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://talawah.io/blog/extreme-http-performance-tuning-one-point-two-million/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Extreme HTTP Performance Tuning: 1.2M API req/s on a 4 vCPU EC2 Instance"),s("OutboundLink")],1),t._v(" 展示了性能调优和热点分析的各种工具的使用。")])]),t._v(" "),s("p",[t._v("内容收集主要来自 "),s("a",{attrs:{href:"https://www.zhihu.com/question/33576416",target:"_blank",rel:"noopener noreferrer"}},[t._v("高性能计算学习路线"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI5NzUxMDAxOQ==&mid=2247484464&idx=1&sn=060fe6e547468103352485ef56c4b386&chksm=ecb2b1dcdbc538cafbe97f8602c662b5f2001fd63b4a1a10f615fbf9fff0061079efbcc6c713",target:"_blank",rel:"noopener noreferrer"}},[t._v("华农队长的备赛指南"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("部分内容如有侵权，请在 "),s("a",{attrs:{href:"https://github.com/heptagonhust/HPC-roadmap",target:"_blank",rel:"noopener noreferrer"}},[t._v("我们的 GitHub repo"),s("OutboundLink")],1),t._v(" 中开一个 issue, 我们会尽快移除。")]),t._v(" "),s("p",[t._v("如果你有更好的想法，欢迎来开一个 Pull Request 来帮助改进这个入门文档。")])])}),[],!1,null,null,null);a.default=r.exports}}]);